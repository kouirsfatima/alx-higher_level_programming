The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

Adding 1 and 2
    >>> add_integer(1, 2)
    3

Subtracting 5 and 2
    >>> add_integer(5, -2)
    3

Adding 2.1 and 9
    >>> add_integer(2.1, 9)
    11

Subtracting 10.3 and 2
    >>> add_integer(10.3, -2)
    8

Testing TypeError for string input
    >>> add_integer(4, "School")
    Traceback (most recent call last):
      ...
    TypeError: b must be an integer or float

Testing TypeError for None input
    >>> add_integer(None)
    Traceback (most recent call last):
      ...
    TypeError: a must be an integer or float

Adding 0 and 9
    >>> add_integer(0, 9)
    9

Testing TypeError for string 'a'
    >>> add_integer(4, 'a')
    Traceback (most recent call last):
      ...
    TypeError: b must be an integer or float

Testing TypeError for None input
    >>> add_integer(4, None)
    Traceback (most recent call last):
      ...
    TypeError: b must be an integer or float

Testing TypeError for list input
    >>> add_integer([1, 2, 3, 4, 5])
    Traceback (most recent call last):
      ...
    TypeError: a must be an integer or float

Testing TypeError for tuple input
    >>> add_integer((1, 2, 3, 4, 5))
    Traceback (most recent call last):
      ...
    TypeError: a must be an integer or float

Testing TypeError for string input
    >>> add_integer("Hello")
    Traceback (most recent call last):
      ...
    TypeError: a must be an integer or float

Adding two letters
    >>> add_integer('2', '1')
    Traceback (most recent call last):
      ...
    TypeError: a must be an integer or float

Adding a letter and a number

Adding two float numbers
>>> add_integer('1', 1)
Traceback (most recent call last):
    ...
TypeError: b must be an integer or float

    >>> add_integer(2.9, 2.9)
    4

Subtracting 98 and 1
    >>> add_integer(-1)
    97

Case Overflow:

    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
      ...
    OverflowError: cannot convert float infinity to integer

Case Overflow 2:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
      ...
    OverflowError: cannot convert float infinity to integer

Case NaN:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
      ...
    ValueError: cannot convert float NaN to integer
