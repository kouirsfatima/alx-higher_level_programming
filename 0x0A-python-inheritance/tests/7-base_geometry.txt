7-base_geometry.txt

"""
The 7-base_geometry module
"""

Importing class from the module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test case: pass negative value
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", -2)
Traceback (most recent call last):
    ...
ValueError: Invalid value, must be greater than 0

Test case: pass a NULL char argument
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Test case: pass float number
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 6.1)
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Test case: pass no argument
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
    ...
ValueError: Invalid value, must be greater than 0

Test case: trying to print the area
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

Test case: trying to pass a non-integer argument
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "5")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Test case: trying to pass a boolean value
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Test case: trying to pass a negative value
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", -5)
Traceback (most recent call last):
    ...
ValueError: Invalid value, must be greater than 0

Test case: trying to pass a zero value
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
    ...
ValueError: Invalid value, must be greater than 0

Test case: passing a positive value
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 5)

# Test case: passing one argument to integer_validator
>>> bg = BaseGeometry()
>>> bg.integer_validator("name")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

Test case: integer_validator with no arguments
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test case: passing three arguments to integer_validator
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 1, 2)
Traceback (most recent call last):
    ...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

Test case: passing one argument to area method
>>> bg = BaseGeometry()
>>> bg.area(5)
Traceback (most recent call last):
    ...
TypeError: area() takes 1 positional argument but 2 were given

Test case: passing two arguments to area method
>>> bg = BaseGeometry()
>>> bg.area(5, 5)
Traceback (most recent call last):
    ...
TypeError: area() takes 1 positional argument but 3 were given

Test case: passing tuple to method
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

Test case: passing list to method
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

Test case: passing dict to method
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer

Test case: passing None to method
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer
